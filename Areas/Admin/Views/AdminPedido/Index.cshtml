<!-- model IEnumerable<VendaDeLanches.Models.PedidoModel> -->

@model ReflectionIT.Mvc.Paging.PagingList<VendaDeLanches.Models.PedidoModel>

@{
    ViewData["Title"] = "Index";
}

<br/>

<div class="alert alert-secondary" role="alert">
    <p class="mb-0" style="color:black">
        Preferencialmente, esta tela é apenas para visualizar os detalhes dos pedidos. Visto que todas as informações abaixo foram dadas pelo cliente,
        só devem ser alteradas e/ou excluídas pelo pedido dos mesmos ou por motivos de força maior. Para mais dúvidas, por favor, contate seu gerente. 
    </p>
</div>

<br/>

<h1>Pedidos</h1><br/>

<form method="get" class="form-inline">
    <input name="filter" class="form-control" placeholder="filtro"
    value="@Model.RouteValue["Filter"]"/>
    <div class="d-grid gap-2">
        <button type="submit" class="btn btn-primary">Procurar</button>
    </div>
</form>
<br/>
Total de Pedidos: @Model.TotalRecordCount
<br/>
<div>
    <vc:pager paging-list="@Model"></vc:pager>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Nome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Sobrenome)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Endereco1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Endereco2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cep)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Estado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cidade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Telefone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoEnviado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PedidoEntregueEm)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Nome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sobrenome)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Endereco1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Endereco2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cep)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cidade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PedidoEnviado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PedidoEntregueEm)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Detalhes</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Excluir</a> |
                <a asp-action="PedidoLanches" asp-route-id="@item.Id">Ver itens</a>
            </td>
        </tr>
}
    </tbody>
</table>
